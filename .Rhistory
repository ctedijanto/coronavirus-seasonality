mutate(season_start_fit_exp=NA, #Add variables to capture strain-season coefficient values
season_start_lwr_exp=NA,
season_start_upr_exp=NA)
### 5. FIGURE 1: Calculate values for strain-season coefficients and CIs -----------------------------------------------------------------------
# Set all values to 1 for reference group (CoVHKU1 in season 1)
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
# Calculate fitted value & confidence bounds for CoVOC43 in season 1
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43')]))
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(coef(model11.beta)['strainCoVOC43']-1.96*sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']))
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(coef(model11.beta)['strainCoVOC43']+1.96*sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']))
# Calculate for rest of season-strain coefficients
for(s in 2:5){
s_name <- paste0("season",s)
# For CoVHKU1 (reference group), can directly use SE from robust vcov matrix
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name])
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name]-1.96*sqrt(model11.beta.robust.vcov[s_name, s_name]))
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name]+1.96*sqrt(model11.beta.robust.vcov[s_name, s_name]))
# For CoVOC43, need to calculate variance as sum of variances of main effects + interaction (3 coefficients per season)
CoVOC43_SE <- sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']+
model11.beta.robust.vcov[s_name, s_name]+
model11.beta.robust.vcov[paste0(s_name,":strainCoVOC43"),paste0(s_name,":strainCoVOC43")] +
2*model11.beta.robust.vcov['strainCoVOC43',s_name]+
2*model11.beta.robust.vcov[s_name,paste0(s_name,":strainCoVOC43")]+
2*model11.beta.robust.vcov['strainCoVOC43',paste0(s_name,":strainCoVOC43")])
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))]))
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))])-1.96*CoVOC43_SE)
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))])+1.96*CoVOC43_SE)
}
### 5. FIGURE 1: Create ggplot! -----------------------------------------------------------------------
CoVHKU1_color <- "darkgoldenrod2"
CoVOC43_color <- "blue"
View(df.model11.beta.for_fig)
CoVHKU1_color <- "darkgoldenrod2"
CoVOC43_color <- "blue"
fig.model11_CoVHKU1 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr, ymax=depletion.same_strain.upr), alpha=0.25, fill=CoVHKU1_color, color=CoVHKU1_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr, ymax=depletion.opp_strain.upr), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVHKU1", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVOC43 <- ggplot(data=df.model11.for_fig2 %>% filter(strain=="CoVOC43")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color,color=CoVHKU1_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43") %>% drop_na(), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVOC43", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVOC43 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color,color=CoVHKU1_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43") %>% drop_na(), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVOC43", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
grid.arrange(fig.model11_CoVHKU1, fig.model11_CoVOC43, ncol=1)
df.us_all_national_withR <- readRDS(file="/Users/ctedijanto/Documents/03 Research/09 2019 nCoV seasonality/02 Analysis/Datasets/2020.03.07 df.us_all_national_withR.Rdata")
df.for_model <- readRDS(file="/Users/ctedijanto/Documents/03 Research/09 2019 nCoV seasonality/02 Analysis/Datasets/2020.03.07 df.for_model.Rdata")
df.for_model.beta <- df.for_model %>% filter(subgroup=="beta")
### 4. REGRESSION: Run model ----------------------------------------------------------
## Model 11 (Model 6, with spline)
df.for_model.beta$strain <- factor(df.for_model.beta$strain, levels=c("CoVHKU1", "CoVOC43")) #Set reference strain (first strain listed)
model11.beta <- lm(log(R_inc_proxy) ~ season*strain + strain*depletion.same_strain + strain*depletion.opp_strain + bs(season_week, degree=3, knots=(c(1:7)*4+1), Boundary.knots=c(1,33)), data=df.for_model.beta)
model11.beta.robust.vcov <- vcovHC(model11.beta, type="HC3") #Calculate robust variance-covariance matrix
model11.beta.robust <- coeftest(model11.beta, vcov=model11.beta.robust.vcov)
## Susceptibility for CoVHKU1
model11.CoVHKU1.depletion.same_strain.SEHC3 <- sqrt(model11.beta.robust.vcov['depletion.same_strain','depletion.same_strain'])
model11.CoVHKU1.depletion.opp_strain.SEHC3 <- sqrt(model11.beta.robust.vcov['depletion.opp_strain','depletion.opp_strain'])
df.model11.CoVHKU1.susc <- df.for_model.beta %>% filter(strain=="CoVHKU1") %>%
select(Week_start, epi_year, epi_week, strain, season, season_week, season_name, depletion.same_strain, depletion.opp_strain) %>% #Include all important variables to combine with 'bind_rows' later
mutate(Week_start=as.Date(Week_start)) %>%
rowwise() %>%
mutate(depletion.same_strain.fit=coef(model11.beta)['depletion.same_strain']*depletion.same_strain,
depletion.same_strain.lwr=(coef(model11.beta)['depletion.same_strain']-1.96*model11.CoVHKU1.depletion.same_strain.SEHC3)*depletion.same_strain,
depletion.same_strain.upr=(coef(model11.beta)['depletion.same_strain']+1.96*model11.CoVHKU1.depletion.same_strain.SEHC3)*depletion.same_strain,
depletion.opp_strain.fit=coef(model11.beta)['depletion.opp_strain']*depletion.opp_strain,
depletion.opp_strain.lwr=(coef(model11.beta)['depletion.opp_strain']-1.96*model11.CoVHKU1.depletion.opp_strain.SEHC3)*depletion.opp_strain,
depletion.opp_strain.upr=(coef(model11.beta)['depletion.opp_strain']+1.96*model11.CoVHKU1.depletion.opp_strain.SEHC3)*depletion.opp_strain)
## Susceptibility for CoVOC43
model11.CoVOC43.depletion.same_strain.SEHC3 <- sqrt(model11.beta.robust.vcov['depletion.same_strain','depletion.same_strain']+
model11.beta.robust.vcov['strainCoVOC43:depletion.same_strain','strainCoVOC43:depletion.same_strain']+
2*model11.beta.robust.vcov['depletion.same_strain','strainCoVOC43:depletion.same_strain']) #Calculate sd of sum of coefficients
model11.CoVOC43.depletion.opp_strain.SEHC3 <- sqrt(model11.beta.robust.vcov['depletion.opp_strain','depletion.opp_strain']+
model11.beta.robust.vcov['strainCoVOC43:depletion.opp_strain','strainCoVOC43:depletion.opp_strain']+
2*model11.beta.robust.vcov['depletion.opp_strain','strainCoVOC43:depletion.opp_strain']) #Calculate sd of sum of coefficients
df.model11.CoVOC43.susc <- df.for_model.beta %>% filter(strain=="CoVOC43") %>%
select(c(Week_start, epi_year, epi_week, strain, season, season_week, season_name, depletion.same_strain, depletion.opp_strain)) %>% #Include all important variables to combine with 'bind_rows' later
mutate(Week_start=as.Date(Week_start)) %>%
rowwise() %>%
mutate(depletion.same_strain.fit=(coef(model11.beta)['depletion.same_strain']+coef(model11.beta)['strainCoVOC43:depletion.same_strain'])*depletion.same_strain,
depletion.same_strain.lwr=(coef(model11.beta)['depletion.same_strain']+coef(model11.beta)['strainCoVOC43:depletion.same_strain']-1.96*model11.CoVOC43.depletion.same_strain.SEHC3)*depletion.same_strain,
depletion.same_strain.upr=(coef(model11.beta)['depletion.same_strain']+coef(model11.beta)['strainCoVOC43:depletion.same_strain']+1.96*model11.CoVOC43.depletion.same_strain.SEHC3)*depletion.same_strain,
depletion.opp_strain.fit=(coef(model11.beta)['depletion.opp_strain']+coef(model11.beta)['strainCoVOC43:depletion.opp_strain'])*depletion.opp_strain,
depletion.opp_strain.lwr=(coef(model11.beta)['depletion.opp_strain']+coef(model11.beta)['strainCoVOC43:depletion.opp_strain']-1.96*model11.CoVOC43.depletion.opp_strain.SEHC3)*depletion.opp_strain,
depletion.opp_strain.upr=(coef(model11.beta)['depletion.opp_strain']+coef(model11.beta)['strainCoVOC43:depletion.opp_strain']+1.96*model11.CoVOC43.depletion.opp_strain.SEHC3)*depletion.opp_strain)
### 5. FIGURE 1: Spline contributions (proxy for seasonal forcing) ------------------------------------
# Calculate spline confidence interval with robust SEs
# SE is the sum of all 10 variances plus 2x all pairwise covariances
df.model11.beta.spline_basis <- as.data.frame(cbind(season_week=df.for_model.beta$season_week, bs(df.for_model.beta$season_week, degree=3, knots=(c(1:7)*4+1), Boundary.knots=c(1,33)))) %>% distinct()
names(df.model11.beta.spline_basis) <- c("season_week", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10")
df.model11.beta.spline_coef <- data.frame(spline_coef=coef(model11.beta)[startsWith(names(coef(model11.beta)),"bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))")])
rownames(df.model11.beta.spline_coef) <- sapply(1:10, function(x) unlist(strsplit(rownames(df.model11.beta.spline_coef)[x], split='bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))', fixed=TRUE))[2]) #pull out index of coefficient
df.model11.beta.spline_basis$var_rowwise <- 0
df.model11.beta.spline_basis$fit_rowwise <- 0
terms <- 0 #Keep count of number of terms  (should be 10 plus choose(10,2)=45, so 55 total)
for(i in 1:10){
df.model11.beta.spline_basis$fit_rowwise <- df.model11.beta.spline_basis$fit_rowwise + df.model11.beta.spline_coef[i,"spline_coef"]*df.model11.beta.spline_basis[,paste0("B",i)] #Calculate fitted values
for(j in 1:i){
if(i==j){
df.model11.beta.spline_basis$var_rowwise <- df.model11.beta.spline_basis$var_rowwise +
model11.beta.robust.vcov[paste0("bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))",i),paste0("bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))",i)]*
(df.model11.beta.spline_basis[,paste0("B",i)])^2 #Add var(X,X) terms to the variance
terms <- terms + 1
} else {
df.model11.beta.spline_basis$var_rowwise <- df.model11.beta.spline_basis$var_rowwise +
2*model11.beta.robust.vcov[paste0("bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))",i), paste0("bs(season_week, degree = 3, knots = (c(1:7) * 4 + 1), Boundary.knots = c(1, 33))",j)]*
(df.model11.beta.spline_basis[,paste0("B",i)])*(df.model11.beta.spline_basis[,paste0("B",j)]) #Add covariance terms to the variance
terms <- terms + 1
}
}
}
df.model11.beta.spline_basis$se_rowwise <- sqrt(df.model11.beta.spline_basis$var_rowwise)
df.model11.beta.spline_basis$lwr_rowwise <- df.model11.beta.spline_basis$fit_rowwise - 1.96*df.model11.beta.spline_basis$se_rowwise
df.model11.beta.spline_basis$upr_rowwise <- df.model11.beta.spline_basis$fit_rowwise + 1.96*df.model11.beta.spline_basis$se_rowwise
df.model11.beta.spline_basis$fit_rowwise_exp <- exp(df.model11.beta.spline_basis$fit_rowwise)
df.model11.beta.spline_basis$lwr_rowwise_exp <- exp(df.model11.beta.spline_basis$lwr_rowwise)
df.model11.beta.spline_basis$upr_rowwise_exp <- exp(df.model11.beta.spline_basis$upr_rowwise)
### 5. FIGURE 1: Merge datasets for figure -----------------------------------------------------------------------
df.model11.beta.for_fig <- bind_rows(df.model11.CoVHKU1.susc, df.model11.CoVOC43.susc) %>%
mutate(depletion.same_strain.fit_exp=exp(depletion.same_strain.fit),
depletion.same_strain.lwr_exp=exp(depletion.same_strain.lwr),
depletion.same_strain.upr_exp=exp(depletion.same_strain.upr),
depletion.opp_strain.fit_exp=exp(depletion.opp_strain.fit),
depletion.opp_strain.lwr_exp=exp(depletion.opp_strain.lwr),
depletion.opp_strain.upr_exp=exp(depletion.opp_strain.upr)) %>%
left_join(df.model11.beta.spline_basis, by="season_week") %>%
mutate(season_start_fit_exp=NA, #Add variables to capture strain-season coefficient values
season_start_lwr_exp=NA,
season_start_upr_exp=NA)
### 5. FIGURE 1: Calculate values for strain-season coefficients and CIs -----------------------------------------------------------------------
# Set all values to 1 for reference group (CoVHKU1 in season 1)
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==1)] <- 1
# Calculate fitted value & confidence bounds for CoVOC43 in season 1
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43')]))
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(coef(model11.beta)['strainCoVOC43']-1.96*sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']))
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==1)] <- exp(coef(model11.beta)['strainCoVOC43']+1.96*sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']))
# Calculate for rest of season-strain coefficients
for(s in 2:5){
s_name <- paste0("season",s)
# For CoVHKU1 (reference group), can directly use SE from robust vcov matrix
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name])
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name]-1.96*sqrt(model11.beta.robust.vcov[s_name, s_name]))
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVHKU1" & df.model11.beta.for_fig$season==s)] <- exp(coef(model11.beta)[s_name]+1.96*sqrt(model11.beta.robust.vcov[s_name, s_name]))
# For CoVOC43, need to calculate variance as sum of variances of main effects + interaction (3 coefficients per season)
CoVOC43_SE <- sqrt(model11.beta.robust.vcov['strainCoVOC43','strainCoVOC43']+
model11.beta.robust.vcov[s_name, s_name]+
model11.beta.robust.vcov[paste0(s_name,":strainCoVOC43"),paste0(s_name,":strainCoVOC43")] +
2*model11.beta.robust.vcov['strainCoVOC43',s_name]+
2*model11.beta.robust.vcov[s_name,paste0(s_name,":strainCoVOC43")]+
2*model11.beta.robust.vcov['strainCoVOC43',paste0(s_name,":strainCoVOC43")])
df.model11.beta.for_fig$season_start_fit_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))]))
df.model11.beta.for_fig$season_start_lwr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))])-1.96*CoVOC43_SE)
df.model11.beta.for_fig$season_start_upr_exp[which(df.model11.beta.for_fig$strain=="CoVOC43" & df.model11.beta.for_fig$season==s)] <- exp(sum(coef(model11.beta)[c('strainCoVOC43',s_name,paste0(s_name,":strainCoVOC43"))])+1.96*CoVOC43_SE)
}
### 5. FIGURE 1: Create ggplot! -----------------------------------------------------------------------
CoVHKU1_color <- "darkgoldenrod2"
CoVOC43_color <- "blue"
fig.model11_CoVHKU1 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr, ymax=depletion.same_strain.upr), alpha=0.25, fill=CoVHKU1_color, color=CoVHKU1_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr, ymax=depletion.opp_strain.upr), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVHKU1", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVOC43 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color,color=CoVHKU1_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43") %>% drop_na(), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVOC43", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
grid.arrange(fig.model11_CoVHKU1, fig.model11_CoVOC43, ncol=1)
warnings(0)
warnings()
fig.model11_CoVHKU1
fig.model11_CoVHKU1 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color, color=CoVHKU1_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVHKU1", season_week==1), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVHKU1", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVHKU1
fig.model11_CoVOC43 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color,color=CoVHKU1_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43") %>% drop_na(), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVOC43", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVOC43
fig.model11_CoVOC43 <- ggplot(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43")) +
geom_hline(yintercept=1, color="black", linetype="dotted", size=1) +
geom_line(aes(x=season_week, y=fit_rowwise_exp), color="red", size=1) +
geom_ribbon(aes(x=season_week, ymin=lwr_rowwise_exp, ymax=upr_rowwise_exp), alpha=0.25, fill="red", color="red", linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.same_strain.fit_exp), color=CoVOC43_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.same_strain.lwr_exp, ymax=depletion.same_strain.upr_exp), alpha=0.25, fill=CoVOC43_color, color=CoVOC43_color, linetype="dotted") +
geom_line(aes(x=season_week, y=depletion.opp_strain.fit_exp), color=CoVHKU1_color, size=1) +
geom_ribbon(aes(x=season_week, ymin=depletion.opp_strain.lwr_exp, ymax=depletion.opp_strain.upr_exp), alpha=0.25, fill=CoVHKU1_color,color=CoVHKU1_color, linetype="dotted") +
geom_point(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, y=season_start_fit_exp), size=2) +
geom_linerange(data=df.model11.beta.for_fig %>% filter(strain=="CoVOC43", season_week==1), aes(x=season_week, ymin=season_start_lwr_exp, ymax=season_start_upr_exp)) +
facet_grid(.~season_name) +
labs(title="CoVOC43", x="Week in season", y="Multiplicative effect on R") +
scale_y_continuous(limits=c(0.44, 2)) +
scale_x_continuous(limits=c(1,30), breaks=c(1,10,20,30), labels=c("1|Oct", "10|Dec", "20|Feb", "30|Apr")) +
theme_bw() +
theme(panel.spacing = unit(1, "lines")) #Increase space between facets
fig.model11_CoVOC43
ggsave("2020.03.09 fig.model11.summary - ili_x_pos_pct - upto30.jpg",
plot=grid.arrange(fig.model11_CoVHKU1, fig.model11_CoVOC43, ncol=1),
path=figure_path, width=13, height=6, units=c("in"))
figure_path <- "/Users/ctedijanto/Documents/03 Research/09 2019 nCoV seasonality/03 Figures"
ggsave("2020.03.09 fig.model11.summary - ili_x_pos_pct - upto30.jpg",
plot=grid.arrange(fig.model11_CoVHKU1, fig.model11_CoVOC43, ncol=1),
path=figure_path, width=13, height=6, units=c("in"))
ggsave("2020.03.09 fig.model11.summary - ili_x_pos_pct - upto30.pdf",
plot=grid.arrange(fig.model11_CoVHKU1, fig.model11_CoVOC43, ncol=1),
path=figure_path, width=13, height=6, units=c("in"))
df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_pos.count, CoVOC43_pos.count)
# Positive tests
df.beta_pos_count.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_pos.count, CoVOC43_pos.count) %>%
pivot_longer(
cols=ends_with("pos.count"),
names_to="strain",
names_pattern=paste0("(.*)_pos.count"), #Rename so that 'names_to' column contains only strain name
values_to="pos.count")
View(df.beta_pos_count.for_fig)
### 4. REGRESSION: INITIALIZE parameters for regression --------------------------------
serial_int.for_model <- "SARS"
inc_proxy.for_model <- "ili_x_pos_pct"
R_inc_proxy.for_model <- "ili_x_pos_pct"
season_start <- 40 #epi_week of season start
season_end <- 20 #epi_week of season end (in the following year)
fig.beta_pos_count <- ggplot() + ylim(c(0,800)) +
geom_rect(data=df.us_all_national.for_fig %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=800, xmin=Week_start, xmax=Week_end), fill="grey85") + #Grey out "out-of-season" estimates
geom_line(data=df.beta_pos_count.for_fig, aes(x=as.Date(Week_start), y=pos.count, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="Positive tests") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
# Positive tests
df.beta_pos_count.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_pos.count, CoVOC43_pos.count) %>%
pivot_longer(
cols=ends_with("pos.count"),
names_to="strain",
names_pattern=paste0("(.*)_pos.count"), #Rename so that 'names_to' column contains only strain name
values_to="pos.count")
fig.beta_pos_count <- ggplot() + ylim(c(0,800)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=800, xmin=Week_start, xmax=Week_end), fill="grey85") + #Grey out "out-of-season" estimates
geom_line(data=df.beta_pos_count.for_fig, aes(x=as.Date(Week_start), y=pos.count, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="Positive tests") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
fig.beta_pos_count
# Positive percent
df.beta_pos_pct.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_pos.pct, CoVOC43_pos.pct) %>%
drop_na() %>%
pivot_longer(
cols=ends_with("pos.pct"),
names_to="strain",
names_pattern=paste0("(.*)_pos.pct"),
values_to="pos.pct")
df.beta_pos_pct.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_pos.pct, CoVOC43_pos.pct) %>%
drop_na() %>%
pivot_longer(
cols=ends_with("pos.pct"),
names_to="strain",
names_pattern=paste0("(.*)_pos.pct"),
values_to="pos.pct")
fig.beta_pos_pct <- ggplot() + ylim(c(0,8)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=8, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(data=df.beta_pos_pct.for_fig, aes(x=as.Date(Week_start), y=pos.pct, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="Percent positive") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
fig.beta_pos_pct
fig.beta_pos_count <- ggplot() + ylim(c(0,800)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=800, xmin=Week_start, xmax=Week_end), fill="grey85") + #Grey out "out-of-season" estimates
geom_line(data=df.beta_pos_count.for_fig, aes(x=Week_start, y=pos.count, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="Positive tests") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
fig.beta_pos_count
fig.beta_ili_x_pos_pct <- ggplot() + ylim(c(0,30)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=30, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(data=df.beta_ili_x_pos_pct.for_fig, aes(x=Week_start, y=ili_x_pos_pct, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="%positive x %ILI") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
# % positive times % ILI
df.beta_ili_x_pos_pct.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_ili_x_pos_pct, CoVOC43_ili_x_pos_pct) %>%
pivot_longer(
cols=ends_with("ili_x_pos_pct"),
names_to="strain",
names_pattern=paste0("(.*)_ili_x_pos_pct"),
values_to="ili_x_pos_pct")
fig.beta_ili_x_pos_pct <- ggplot() + ylim(c(0,30)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=30, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(data=df.beta_ili_x_pos_pct.for_fig, aes(x=Week_start, y=ili_x_pos_pct, color=strain), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
labs(x="Date", y="%positive x %ILI") +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
fig.beta_ili_x_pos_pct
fig.beta_diff_inc <- ggplot() + ylim(c(0,3)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=3, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(data=df.beta_diff_inc.for_fig, aes(x=Week_start, y=R, color=strain, linetype=inc_proxy), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
scale_linetype_manual(name="Incidence proxy",
values=c("ili_x_pos_pct"="solid", "pos_pct"="dashed", "pos_count"="dotted"),
labels=c("ili_x_pos_pct"="%positive x %ILI", "pos_pct"="%positive", "pos_count"="Positive tests")) +
labs(x="Date", y="R effective") +
theme_bw() +
theme(legend.position="bottom",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.text=element_text(size=10))
# Effective R by incidence measure
df.beta_diff_inc.for_fig <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, CoVHKU1_R_pos_count_SARS, CoVOC43_R_pos_count_SARS,
CoVHKU1_R_pos_pct_SARS, CoVOC43_R_pos_pct_SARS,
CoVHKU1_R_ili_x_pos_pct_SARS, CoVOC43_R_ili_x_pos_pct_SARS) %>%
drop_na() %>%
pivot_longer(
cols=ends_with("_SARS"),
names_to=c("strain", "inc_proxy"),
names_pattern=paste0("(.*)_R_(.*)_SARS"),
values_to="R")
fig.beta_diff_inc <- ggplot() + ylim(c(0,3)) +
geom_rect(data=df.us_all_national_withR %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=0, ymax=3, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(data=df.beta_diff_inc.for_fig, aes(x=Week_start, y=R, color=strain, linetype=inc_proxy), alpha=0.8, size=1.1) +
scale_color_manual(values=c("CoVHKU1"=CoVHKU1_color, "CoVOC43"=CoVOC43_color)) +
scale_linetype_manual(name="Incidence proxy",
values=c("ili_x_pos_pct"="solid", "pos_pct"="dashed", "pos_count"="dotted"),
labels=c("ili_x_pos_pct"="%positive x %ILI", "pos_pct"="%positive", "pos_count"="Positive tests")) +
labs(x="Date", y="R effective") +
theme_bw() +
theme(legend.position="bottom",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.text=element_text(size=10))
fig.beta_diff_inc
ggsave("2020.03.09 beta_diff_inc_panels.pdf",
plot=ggarrange(fig.beta_pos_count, fig.beta_pos_pct, fig.beta_ili_x_pos_pct, fig.beta_diff_inc, ncol=1,
heights=c(1,1,1,1.6), align="v"),
path=figure_path,
width=12, height=9, units=c("in"))
ggsave("2020.03.09 beta_diff_inc_panels.jpg",
plot=ggarrange(fig.beta_pos_count, fig.beta_pos_pct, fig.beta_ili_x_pos_pct, fig.beta_diff_inc, ncol=1,
heights=c(1,1,1,1.6), align="v"),
path=figure_path,
width=12, height=9, units=c("in"))
View(df.beta_diff_inc.for_fig)
View(df.us_all_national_withR)
create_SI_fig <- function(strain, proxy_name, y_label, y_min, y_max, title){
temp.df <- df.us_all_national_withR %>%
select(Week_start, Week_end, epi_week, starts_with(paste0(strain, "_", proxy_name))) %>%
drop_na() %>% #Drop weeks without values
pivot_longer(
cols = starts_with(paste0(strain, "_", proxy_name)),
names_to = "serial_int",
names_pattern = paste0(strain, "_", proxy_name, "_(.*)"),
values_to = "R")
fig <- ggplot(data=temp.df, aes(x=Week_start, y=R)) +
geom_rect(data=temp.df %>% filter(epi_week>season_end & epi_week<season_start),
mapping=aes(ymin=y_min, ymax=y_max, xmin=Week_start, xmax=Week_end), fill="grey85") +
geom_line(aes(linetype=serial_int), color=get(paste0(strain,"_color")),  alpha=0.6, size=1.1) +
scale_linetype_manual(values=c("nCoV_Li"="dashed", "nCoV_Nishiura"="dotted", "SARS"="solid"),
labels=c("nCoV_Li"="Li2020", "nCoV_Nishiura"="Nishiura2020", "SARS"="SARS"),
limits=c("SARS", "nCoV_Li", "nCoV_Nishiura"),
name="Serial interval") +
labs(y=y_label, x="Date") +
ylim(c(y_min, y_max)) +
#xlim(c(as.Date(min_date), as.Date(max_date))) +
theme_bw() +
theme(legend.position="none",
title=element_text(size=14),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12))
return(fig)
}
fig.CoVHKU1_diff_SI <- create_SI_fig("CoVHKU1", "R_ili_x_pos_pct", "R effective", 0, 3, "Effective R with varying serial interval: HCoV-HKU1")
fig.CoVOC43_diff_SI <- create_SI_fig("CoVOC43", "R_ili_x_pos_pct", "R effective", 0, 3, "Effective R with varying serial interval: HCoV-OC43")
fig.CoVHKU1_diff_SI
fig.CoVOC43_diff_SI
ggsave("2020.03.09 beta_SI_panels.jpg",
plot=ggarrange(fig.CoVHKU1_diff_SI, fig.CoVOC43_diff_SI, ncol=1,
heights=c(1,1), align="v"),
path=figure_path,
width=10, height=6, units=c("in"))
ggsave("2020.03.09 beta_SI_panels.pdf",
plot=ggarrange(fig.CoVHKU1_diff_SI, fig.CoVOC43_diff_SI, ncol=1,
heights=c(1,1), align="v"),
path=figure_path,
width=10, height=6, units=c("in"))
